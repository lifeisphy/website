<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Notes</title>
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex/dist/katex.min.css"> -->
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/content.css">
</head>
<body>
  <div id="sidebar">

    <% function renderEntries(entries) { %>
      <% entries.forEach(function(entry) { %>
        <% if (entry.isfile) { %>
          <div class="sidebar-item">
            <a href="<%= entry.path %>" class="sidebar-item" data-partial = "true">📄 <%= entry.filename %></a>
          </div>
        <% } else { %>
          <div class="sidebar-item" onclick="toggleSubItems('<%= entry.id %>')">
            <a href="<%= entry.path %>" data-partial = "true">📁 <%= entry.directory %></a>
          </div>
          <div id="<%= entry.id %>" class="sidebar-subitems" style="display: none;">
            <% renderEntries(entry.children); %> <!-- Recursive call -->
          </div>
        <% } %>
      <% }); %>
    <% } %>

    <% renderEntries(file_tree); %> <!-- Initial call -->

    <div id="item1" class="sidebar-subitems">
      <div class="sidebar-item">📄 File 1.1</div>
      <div class="sidebar-item">📄 File 1.2</div>
    </div>

    <div class="sidebar-item" onclick="toggleSubItems('item2')">📁 Main Folder 2</div>
    <div id="item2" class="sidebar-subitems">
      <div class="sidebar-item">📄 File 2.1</div>
      <div class="sidebar-item">📄 File 2.2</div>
    </div>
  </div>
  <button class="toggle-button" id="toggleButton">≡</button>
  <script>
    // Function to toggle visibility of sub-items
    function toggleSubItems(id) {
      const subItems = document.getElementById(id);
      if (subItems.style.display === "none" || subItems.style.display === "") {
        subItems.style.display = "block";
      } else {
        subItems.style.display = "none";
      }
    }
    const sidebar = document.getElementById('sidebar');
    const toggleButton = document.getElementById('toggleButton');
    const content = document.getElementById('content');
    toggleButton.addEventListener('click', () => {
      if(sidebar.classList.contains('collapsed')){
        toggleButton.innerHTML = '≡'; // Show the button when collapsed
        sidebar.style.width = '250px';
        content.style.marginLeft = '250px';
      }else {
        toggleButton.innerHTML = '×'; // Hide the button when expanded
        sidebar.style.width = 0;
        content.style.marginLeft = 0;
      }
      sidebar.classList.toggle('collapsed');
      toggleButton.classList.toggle('collapsed');
      content.classList.toggle('collapsed');
    })

    // content loading function
    document.addEventListener('DOMContentLoaded', () => {
      document.body.addEventListener('click', (event) => {
          const target = event.target;
          if (target.tagName === 'A' && target.dataset.partial === 'true') {
              event.preventDefault(); // 阻止默认跳转行为
              const url = target.href;
  
              // 发送异步请求
              fetch(url + '?partial=true')
                  .then(response => {
                    const contentType = response.headers.get('Content-Type');
                    if (contentType && contentType.startsWith('image/')) {
                      // If the response is an image
                      return response.blob(); // Get the image as a Blob
                    } else {
                      // Otherwise, assume it's text/HTML
                      return response.text();
                    }
                  })
                  .then(data => {
                      // 更新 .content 区域
                      const contentDiv = document.querySelector('.content');
                      if(data instanceof Blob){
                        const imageUrl = URL.createObjectURL(data);
                        contentDiv.innerHTML = `<img src="${imageUrl}" alt="Image" style="max-width: 100%; height: auto;"/>`;
                      }else{
                        contentDiv.innerHTML = data;
                      }
                      history.pushState(null, '', url);
                  })
                  .catch(err => console.error('Error loading content:', err));
          }
      });
  });
  </script>

  <div class="content" id="content">
    <%- content || 'Welcome to the notes app!' %>
  </div>
</body>
</html>